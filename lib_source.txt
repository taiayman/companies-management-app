

    File: C:\Users\LENOVO\Desktop\business_management_app\lib\main.dart
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:business_management_app/screens/login.dart';
import 'package:business_management_app/screens/boss_dashboard.dart';
import 'package:business_management_app/screens/ceo_dashboard.dart';
import 'package:business_management_app/screens/signup.dart';
import 'package:business_management_app/screens/profile_screen.dart';
import 'package:business_management_app/screens/company_details_screen.dart';
import 'package:business_management_app/screens/add_project_screen.dart';
import 'package:business_management_app/screens/initial_screen.dart';
import 'package:business_management_app/utils/theme.dart';
import 'package:business_management_app/screens/ai_chat_screen.dart'; // Import AI Chat Screen
import 'package:business_management_app/screens/settings_screen.dart'; // Import Settings Screen
import 'package:business_management_app/screens/notifications_screen.dart'; // Import Notifications Screen

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Business Management App',
      theme: appTheme(),
      home: InitialScreen(), // Set the home to InitialScreen
      routes: {
        '/login': (context) => LoginScreen(),
        '/signup': (context) => SignUpScreen(),
        '/boss_dashboard': (context) => BossDashboard(),
        '/ceo_dashboard': (context) => CEODashboard(),
        '/profile': (context) => ProfileScreen(),
        '/company_details': (context) => CompanyDetailsScreen(companyId: ModalRoute.of(context)!.settings.arguments as String),
        '/add_project': (context) => AddProjectScreen(companyId: ModalRoute.of(context)!.settings.arguments as String),
      },
    );
  }
}



    File: C:\Users\LENOVO\Desktop\business_management_app\lib\_source.txt


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\main.dart
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:business_management_app/screens/login.dart';
import 'package:business_management_app/screens/boss_dashboard.dart';
import 'package:business_management_app/screens/ceo_dashboard.dart';
import 'package:business_management_app/screens/signup.dart';
import 'package:business_management_app/screens/profile_screen.dart';
import 'package:business_management_app/screens/company_details_screen.dart';
import 'package:business_management_app/screens/add_project_screen.dart';
import 'package:business_management_app/utils/theme.dart';
import 'package:business_management_app/screens/initial_screen.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Business Management App',
      theme: appTheme(),
      initialRoute: '/',
      routes: {
        '/': (context) => InitialScreen(),
        '/login': (context) => LoginScreen(),
        '/signup': (context) => SignUpScreen(),
        '/boss_dashboard': (context) => BossDashboard(),
        '/ceo_dashboard': (context) => CEODashboard(),
        '/profile': (context) => ProfileScreen(),
        '/company_details': (context) => CompanyDetailsScreen(companyId: ModalRoute.of(context)!.settings.arguments as String),
        '/add_project': (context) => AddProjectScreen(companyId: ModalRoute.of(context)!.settings.arguments as String),
      },
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\_source.txt


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\company.dart
class Company {
  final String id;
  final String name;
  final String ceoId;
  final String ceoName;
  final String ceoEmail;
  final String ceoPhone;
  final String ceoWhatsApp;
  final int employeeCount;
  final List<String> projects;
  final String statusColor;

  Company({
    required this.id,
    required this.name,
    required this.ceoId,
    required this.ceoName,
    required this.ceoEmail,
    required this.ceoPhone,
    required this.ceoWhatsApp,
    required this.employeeCount,
    required this.projects,
    required this.statusColor,
  });

  factory Company.fromMap(Map<String, dynamic> data) {
    return Company(
      id: data['id'],
      name: data['name'],
      ceoId: data['ceoId'],
      ceoName: data['ceoName'],
      ceoEmail: data['ceoEmail'],
      ceoPhone: data['ceoPhone'],
      ceoWhatsApp: data['ceoWhatsApp'],
      employeeCount: data['employeeCount'],
      projects: List<String>.from(data['projects']),
      statusColor: data['statusColor'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'ceoId': ceoId,
      'ceoName': ceoName,
      'ceoEmail': ceoEmail,
      'ceoPhone': ceoPhone,
      'ceoWhatsApp': ceoWhatsApp,
      'employeeCount': employeeCount,
      'projects': projects,
      'statusColor': statusColor,
    };
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\project.dart
class Project {
  final String id;
  final String name;
  final DateTime start;
  final DateTime end;
  final double budget;
  final String details;
  final String status;
  final String leaderId;

  Project({
    required this.id,
    required this.name,
    required this.start,
    required this.end,
    required this.budget,
    required this.details,
    required this.status,
    required this.leaderId,
  });

  factory Project.fromMap(Map<String, dynamic> data) {
    return Project(
      id: data['id'],
      name: data['name'],
      start: DateTime.parse(data['start']),
      end: DateTime.parse(data['end']),
      budget: data['budget'],
      details: data['details'],
      status: data['status'],
      leaderId: data['leaderId'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'start': start.toIso8601String(),
      'end': end.toIso8601String(),
      'budget': budget,
      'details': details,
      'status': status,
      'leaderId': leaderId,
    };
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\user.dart
class User {
  final String id;
  final String name;
  final String email;
  final String role;
  final String companyId;
  final String? whatsapp;
  final String? description;
  final String? profileImage;

  User({
    required this.id,
    required this.name,
    required this.email,
    required this.role,
    required this.companyId,
    this.whatsapp,
    this.description,
    this.profileImage,
  });

  factory User.fromMap(Map<String, dynamic> data) {
    return User(
      id: data['id'],
      name: data['name'],
      email: data['email'],
      role: data['role'],
      companyId: data['companyId'],
      whatsapp: data['whatsapp'],
      description: data['description'],
      profileImage: data['profileImage'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'email': email,
      'role': role,
      'companyId': companyId,
      'whatsapp': whatsapp,
      'description': description,
      'profileImage': profileImage,
    };
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\add_project_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class AddProjectScreen extends StatefulWidget {
  final String companyId;

  AddProjectScreen({required this.companyId});

  @override
  _AddProjectScreenState createState() => _AddProjectScreenState();
}

class _AddProjectScreenState extends State<AddProjectScreen> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _startDateController = TextEditingController();
  final _endDateController = TextEditingController();
  final _budgetController = TextEditingController();

  void _submit() {
    if (_formKey.currentState!.validate()) {
      // Add the project to the database
      // You should call your service to add the project here

      print('Project added successfully for companyId: ${widget.companyId}');
      // Pop the screen and return to the dashboard
      Navigator.pop(context);
    } else {
      print('Form validation failed');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Add Project', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: SingleChildScrollView(
            child: Column(
              children: [
                _buildTextFormField(_nameController, 'Project Name'),
                _buildTextFormField(_descriptionController, 'Description'),
                _buildTextFormField(_startDateController, 'Start Date'),
                _buildTextFormField(_endDateController, 'End Date'),
                _buildTextFormField(_budgetController, 'Budget'),
                SizedBox(height: 20),
                ElevatedButton(
                  onPressed: _submit,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFFD97757),
                    padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                    textStyle: GoogleFonts.rubik(fontSize: 18),
                  ),
                  child: Text('Add Project', style: TextStyle(color: Colors.white)),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextFormField(TextEditingController controller, String labelText) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextFormField(
        controller: controller,
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Please enter a $labelText';
          }
          return null;
        },
        style: GoogleFonts.rubik(),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\boss_dashboard.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/services/company_service.dart';
import 'package:business_management_app/widgets/company_card.dart';

class BossDashboard extends StatefulWidget {
  @override
  _BossDashboardState createState() => _BossDashboardState();
}

class _BossDashboardState extends State<BossDashboard> {
  final CompanyService _companyService = CompanyService();
  List<Company> _companies = [];

  @override
  void initState() {
    super.initState();
    _loadCompanies();
  }

  Future<void> _loadCompanies() async {
    // Example of loading companies; adjust as needed based on your data structure
    List<Company> companies = [
      await _companyService.getCompanyById('companyId1'),
      await _companyService.getCompanyById('companyId2'),
    ];
    setState(() {
      _companies = companies;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Boss Dashboard'),
        actions: [
          IconButton(
            icon: Icon(Icons.logout),
            onPressed: () {
              // Handle logout
            },
          ),
        ],
      ),
      body: ListView.builder(
        itemCount: _companies.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              Navigator.pushNamed(context, '/company_details', arguments: _companies[index].id);
            },
            child: CompanyCard(company: _companies[index]),
          );
        },
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\ceo_dashboard.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/services/company_service.dart';
import 'package:business_management_app/services/project_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart' as AppUser;
import 'package:business_management_app/screens/add_project_screen.dart';
import 'package:business_management_app/screens/edit_project_screen.dart';
import 'package:business_management_app/screens/project_details_screen.dart';
import 'package:business_management_app/screens/report_issue_screen.dart';
import 'package:business_management_app/screens/send_notification_screen.dart';
import 'package:business_management_app/widgets/project_card.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        textTheme: GoogleFonts.rubikTextTheme(),
        primaryColor: Color(0xFFD97757),
        backgroundColor: Color(0xFFF2F0E8),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            foregroundColor: Colors.white, backgroundColor: Color(0xFFD97757),
            textStyle: GoogleFonts.rubik(fontSize: 18),
          ),
        ),
      ),
      home: CEODashboard(),
    );
  }
}

class CEODashboard extends StatefulWidget {
  @override
  _CEODashboardState createState() => _CEODashboardState();
}

class _CEODashboardState extends State<CEODashboard> {
  final CompanyService _companyService = CompanyService();
  final ProjectService _projectService = ProjectService();
  final UserService _userService = UserService();
  List<Project> _projects = [];
  Company? _selectedCompany;
  AppUser.User? _user;

  @override
  void initState() {
    super.initState();
    _loadUserAndCompany();
  }

  Future<void> _loadUserAndCompany() async {
    AppUser.User? user = await _userService.getCurrentUser();
    setState(() {
      _user = user;
    });

    if (user != null && user.companyId.isNotEmpty) {
      Company company = await _companyService.getCompanyById(user.companyId);
      setState(() {
        _selectedCompany = company;
      });

      _loadProjects(company.id);
    }
  }

  Future<void> _loadProjects(String companyId) async {
    List<Project> projects = await _projectService.getProjectsForCompany(companyId);
    setState(() {
      _projects = projects;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('CEO Dashboard'),
        backgroundColor: Color(0xFFD97757),
        actions: [
          IconButton(
            icon: Icon(Icons.account_circle),
            onPressed: () {
              Navigator.pushNamed(context, '/profile');
            },
          ),
          IconButton(
            icon: Icon(Icons.logout),
            onPressed: () {
              // Handle logout
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            if (_user != null) _buildProfileHeader(),
            _buildActionButtons(),
            if (_selectedCompany != null) _buildProjectsSection(),
          ],
        ),
      ),
      floatingActionButton: _selectedCompany != null
          ? FloatingActionButton(
              onPressed: () {
                if (_selectedCompany != null) {
                  Navigator.pushNamed(
                    context,
                    '/add_project',
                    arguments: _selectedCompany!.id,
                  ).then((value) => _loadProjects(_selectedCompany!.id));
                }
              },
              backgroundColor: Color(0xFFD97757),
              child: Icon(Icons.add),
            )
          : null,
    );
  }

  Widget _buildProfileHeader() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Row(
        children: [
          CircleAvatar(
            backgroundImage: NetworkImage(_user?.profileImage ?? 'https://via.placeholder.com/150'),
            radius: 30,
          ),
          SizedBox(width: 16),
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                _user?.name ?? 'Unknown',
                style: GoogleFonts.rubik(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              Text(
                'the CEO of ${_selectedCompany?.name ?? 'no company selected'}',
                style: GoogleFonts.rubik(fontSize: 16, color: Colors.grey),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildActionButtons() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        children: [
          _buildActionButton('Add a project', () {
            if (_selectedCompany != null) {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => AddProjectScreen(companyId: _selectedCompany!.id)),
              ).then((value) => _loadProjects(_selectedCompany!.id));
            }
          }, Icons.add),
          _buildActionButton('Report an issue', () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => ReportIssueScreen()),
            );
          }, Icons.report),
          _buildActionButton('Send a notification', () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => SendNotificationScreen()),
            );
          }, Icons.notification_add),
        ],
      ),
    );
  }

  Widget _buildActionButton(String title, VoidCallback onPressed, IconData icon) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: Color(0xFFD97757),
          padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
          textStyle: GoogleFonts.rubik(fontSize: 18),
        ),
        onPressed: onPressed,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(icon, color: Colors.white),
            SizedBox(width: 8),
            Text(title, style: TextStyle(color: Colors.white)),
          ],
        ),
      ),
    );
  }

  Widget _buildProjectsSection() {
    return Column(
      children: [
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Text(
            'Projects',
            style: GoogleFonts.rubik(fontSize: 24, fontWeight: FontWeight.bold),
          ),
        ),
        _buildProjectsList(),
      ],
    );
  }

  Widget _buildProjectsList() {
    return ListView.builder(
      shrinkWrap: true,
      physics: NeverScrollableScrollPhysics(),
      itemCount: _projects.length,
      itemBuilder: (context, index) {
        return ProjectCard(
          project: _projects[index],
          onView: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => ProjectDetailsScreen(project: _projects[index]),
              ),
            );
          },
          onUpdate: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => EditProjectScreen(project: _projects[index]),
              ),
            ).then((value) => _loadProjects(_selectedCompany!.id));
          },
        );
      },
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\company_details_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/services/company_service.dart';

class CompanyDetailsScreen extends StatelessWidget {
  final String companyId;

  CompanyDetailsScreen({required this.companyId});

  final CompanyService _companyService = CompanyService();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Company Details'),
      ),
      body: FutureBuilder<Company>(
        future: _companyService.getCompanyById(companyId),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            return Center(child: Text('Error loading company details'));
          } else {
            Company? company = snapshot.data;
            return company != null ? _buildCompanyDetails(context, company) : Center(child: Text('Company not found'));
          }
        },
      ),
    );
  }

  Widget _buildCompanyDetails(BuildContext context, Company company) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(company.name, style: Theme.of(context).textTheme.headline6),
          SizedBox(height: 8),
          Text('CEO ID: ${company.ceoId}'),
          SizedBox(height: 8),
          Text('Employee Count: ${company.employeeCount}'),
          SizedBox(height: 8),
          Text('Status: ${company.statusColor}'),
          // Add more details as needed
        ],
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\contact_ceo_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';

class ContactCEOScreen extends StatelessWidget {
  final Company company;

  ContactCEOScreen({required this.company});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Contact CEO'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Name: ${company.ceoName}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'Email: ${company.ceoEmail}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'Phone: ${company.ceoPhone}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'WhatsApp: ${company.ceoWhatsApp}',
              style: TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\edit_project_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/services/project_service.dart';

class EditProjectScreen extends StatefulWidget {
  final Project project;

  EditProjectScreen({required this.project});

  @override
  _EditProjectScreenState createState() => _EditProjectScreenState();
}

class _EditProjectScreenState extends State<EditProjectScreen> {
  final _nameController = TextEditingController();
  final _budgetController = TextEditingController();
  final _detailsController = TextEditingController();
  final ProjectService _projectService = ProjectService();

  @override
  void initState() {
    super.initState();
    _nameController.text = widget.project.name;
    _budgetController.text = widget.project.budget.toString();
    _detailsController.text = widget.project.details;
  }

  void _editProject() async {
    final name = _nameController.text;
    final budget = double.tryParse(_budgetController.text) ?? 0;
    final details = _detailsController.text;

    Project updatedProject = Project(
      id: widget.project.id,
      name: name,
      start: widget.project.start,
      end: widget.project.end,
      budget: budget,
      details: details,
      status: widget.project.status,
      leaderId: widget.project.leaderId,
    );

    await _projectService.updateProject(updatedProject);
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Edit Project'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _nameController,
              decoration: InputDecoration(labelText: 'Project Name'),
            ),
            TextField(
              controller: _budgetController,
              decoration: InputDecoration(labelText: 'Budget'),
              keyboardType: TextInputType.number,
            ),
            TextField(
              controller: _detailsController,
              decoration: InputDecoration(labelText: 'Details'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _editProject,
              child: Text('Save Changes'),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\initial_screen.dart
import 'package:flutter/material.dart';

class InitialScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Welcome'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                Navigator.pushNamed(context, '/login', arguments: 'Boss');
              },
              child: Text('I am a Boss'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                showDialog(
                  context: context,
                  builder: (context) => AlertDialog(
                    title: Text('CEO Login or Sign Up'),
                    content: Text('Are you an existing CEO or a new CEO?'),
                    actions: [
                      TextButton(
                        onPressed: () {
                          Navigator.pop(context); // Close dialog
                          Navigator.pushNamed(context, '/login', arguments: 'CEO');
                        },
                        child: Text('Login'),
                      ),
                      TextButton(
                        onPressed: () {
                          Navigator.pop(context); // Close dialog
                          Navigator.pushNamed(context, '/signup');
                        },
                        child: Text('Sign Up'),
                      ),
                    ],
                  ),
                );
              },
              child: Text('I am a CEO'),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\login.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/services/auth_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart';

class LoginScreen extends StatefulWidget {
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final AuthService _authService = AuthService();
  final UserService _userService = UserService();
  String? _role;

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    _role = ModalRoute.of(context)!.settings.arguments as String?;
  }

  void _login() async {
    final email = _emailController.text;
    final password = _passwordController.text;

    bool success = await _authService.login(email, password);
    if (success) {
      User? user = await _userService.getUser(_authService.getCurrentUser()!.uid);
      if (user != null) {
        if (user.role == 'Boss' || _role == 'Boss') {
          Navigator.pushReplacementNamed(context, '/boss_dashboard');
        } else if (user.role == 'CEO' || _role == 'CEO') {
          Navigator.pushReplacementNamed(context, '/ceo_dashboard');
        }
      }
    } else {
      // Show error message
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _emailController,
              decoration: InputDecoration(labelText: 'Email'),
            ),
            TextField(
              controller: _passwordController,
              decoration: InputDecoration(labelText: 'Password'),
              obscureText: true,
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _login,
              child: Text('Login'),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\messages_screen.dart
import 'package:flutter/material.dart';

class MessagesScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Messages'),
      ),
      body: Center(
        child: Text('Messaging functionality coming soon...'),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\notifications_screen.dart
import 'package:flutter/material.dart';

class NotificationsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Notifications'),
      ),
      body: Center(
        child: Text('Notification functionality coming soon...'),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\profile_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/user.dart' as AppUser;
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/services/auth_service.dart';

class ProfileScreen extends StatefulWidget {
  @override
  _ProfileScreenState createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen> {
  final UserService _userService = UserService();
  final AuthService _authService = AuthService();
  AppUser.User? _user;
  final _nameController = TextEditingController();
  final _emailController = TextEditingController();
  final _whatsappController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _profileImageController = TextEditingController();

  @override
  void initState() {
    super.initState();
    _loadUserProfile();
  }

  Future<void> _loadUserProfile() async {
    AppUser.User? user = await _userService.getUser(_authService.getCurrentUser()!.uid);
    setState(() {
      _user = user;
      _nameController.text = user!.name;
      _emailController.text = user.email;
      _whatsappController.text = user.whatsapp ?? '';
      _descriptionController.text = user.description ?? '';
      _profileImageController.text = user.profileImage ?? '';
    });
  }

  void _saveProfile() async {
    AppUser.User updatedUser = AppUser.User(
      id: _user!.id,
      name: _nameController.text,
      email: _emailController.text,
      role: _user!.role,
      companyId: _user!.companyId,
      whatsapp: _whatsappController.text,
      description: _descriptionController.text,
      profileImage: _profileImageController.text,
    );
    await _userService.updateUser(updatedUser);
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('Profile updated successfully')),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Profile', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              _buildTextField(_nameController, 'Name'),
              _buildTextField(_emailController, 'Email', readOnly: true),
              _buildTextField(_whatsappController, 'WhatsApp'),
              _buildTextField(_descriptionController, 'Description'),
              _buildTextField(_profileImageController, 'Profile Image URL'),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _saveProfile,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18),
                ),
                child: Text('Save', style: TextStyle(color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String labelText, {bool readOnly = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextField(
        controller: controller,
        readOnly: readOnly,
        style: GoogleFonts.rubik(),
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\project_details_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';

class ProjectDetailsScreen extends StatelessWidget {
  final Project project;

  ProjectDetailsScreen({required this.project});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(project.name),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Description',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text(project.details),
            SizedBox(height: 16),
            Text(
              'Goals',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('goals here'),
            SizedBox(height: 16),
            Text(
              'Start and end date',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('${project.start.toLocal()} to ${project.end.toLocal()}'),
            SizedBox(height: 16),
            Text(
              'Budget',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('${project.budget}'),
            SizedBox(height: 16),
            Text(
              'Team members',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Row(
              children: [
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
                SizedBox(width: 8),
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
                SizedBox(width: 8),
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\report_issue_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class ReportIssueScreen extends StatefulWidget {
  @override
  _ReportIssueScreenState createState() => _ReportIssueScreenState();
}

class _ReportIssueScreenState extends State<ReportIssueScreen> {
  final _issueController = TextEditingController();

  void _reportIssue() {
    final issue = _issueController.text;
    // Implement issue reporting logic here
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Report an Issue', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _issueController,
              decoration: InputDecoration(
                labelText: 'Describe the issue',
                labelStyle: GoogleFonts.rubik(),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
                filled: true,
                fillColor: Colors.white,
              ),
              maxLines: 5,
              style: GoogleFonts.rubik(),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _reportIssue,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFFD97757),
                padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                textStyle: GoogleFonts.rubik(fontSize: 18),
              ),
              child: Text('Report Issue', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\send_notification_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class SendNotificationScreen extends StatefulWidget {
  @override
  _SendNotificationScreenState createState() => _SendNotificationScreenState();
}

class _SendNotificationScreenState extends State<SendNotificationScreen> {
  final _notificationController = TextEditingController();

  void _sendNotification() {
    final notification = _notificationController.text;
    // Implement notification sending logic here
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Send a Notification', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _notificationController,
              decoration: InputDecoration(
                labelText: 'Notification message',
                labelStyle: GoogleFonts.rubik(),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
                filled: true,
                fillColor: Colors.white,
              ),
              maxLines: 5,
              style: GoogleFonts.rubik(),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _sendNotification,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFFD97757),
                padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                textStyle: GoogleFonts.rubik(fontSize: 18),
              ),
              child: Text('Send Notification', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\signup.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/services/auth_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/services/company_service.dart';

class SignUpScreen extends StatefulWidget {
  @override
  _SignUpScreenState createState() => _SignUpScreenState();
}

class _SignUpScreenState extends State<SignUpScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final _nameController = TextEditingController();
  final _whatsappController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _profileImageController = TextEditingController(); // Assume URL for simplicity
  final CompanyService _companyService = CompanyService();
  final AuthService _authService = AuthService();
  final UserService _userService = UserService();
  String _selectedCompanyId = '';
  List<Company> _companies = [];

  @override
  void initState() {
    super.initState();
    _loadCompanies();
  }

  Future<void> _loadCompanies() async {
    List<Company> companies = await _companyService.getAllCompanies();
    setState(() {
      _companies = companies;
    });
  }

  void _signUp() async {
    final email = _emailController.text;
    final password = _passwordController.text;
    final name = _nameController.text;
    final whatsapp = _whatsappController.text;
    final description = _descriptionController.text;
    final profileImage = _profileImageController.text;

    if (_selectedCompanyId.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please select a company')),
      );
      return;
    }

    bool success = await _authService.signUp(email, password);
    if (success) {
      User newUser = User(
        id: _authService.getCurrentUser()!.uid,
        name: name,
        email: email,
        role: 'CEO',
        companyId: _selectedCompanyId,
        whatsapp: whatsapp,
        description: description,
        profileImage: profileImage,
      );
      await _userService.addUser(newUser);
      // Navigate to CEO Dashboard
      Navigator.pushReplacementNamed(context, '/ceo_dashboard');
    } else {
      // Show error message
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Sign up failed')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Sign Up', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              _buildTextField(_emailController, 'Email'),
              _buildTextField(_passwordController, 'Password', obscureText: true),
              _buildTextField(_nameController, 'Name'),
              _buildTextField(_whatsappController, 'WhatsApp'),
              _buildTextField(_descriptionController, 'Description'),
              _buildTextField(_profileImageController, 'Profile Image URL'),
              _buildDropdown(),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _signUp,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18),
                ),
                child: Text('Sign Up', style: TextStyle(color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String labelText, {bool obscureText = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextField(
        controller: controller,
        obscureText: obscureText,
        style: GoogleFonts.rubik(),
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
      ),
    );
  }

  Widget _buildDropdown() {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: DropdownButtonFormField<String>(
        value: _selectedCompanyId.isNotEmpty ? _selectedCompanyId : null,
        hint: Text('Select Company', style: GoogleFonts.rubik()),
        decoration: InputDecoration(
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
        items: _companies.map((Company company) {
          return DropdownMenuItem<String>(
            value: company.id,
            child: Text(company.name, style: GoogleFonts.rubik()),
          );
        }).toList(),
        onChanged: (String? newValue) {
          setState(() {
            _selectedCompanyId = newValue!;
          });
        },
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\auth_service.dart
import 'package:firebase_auth/firebase_auth.dart';

class AuthService {
  final FirebaseAuth _auth = FirebaseAuth.instance;

  // Login with email and password
  Future<bool> login(String email, String password) async {
    try {
      UserCredential userCredential = await _auth.signInWithEmailAndPassword(email: email, password: password);
      return userCredential.user != null;
    } catch (e) {
      print(e.toString());
      return false;
    }
  }

  // Sign up with email and password
  Future<bool> signUp(String email, String password) async {
    try {
      UserCredential userCredential = await _auth.createUserWithEmailAndPassword(email: email, password: password);
      return userCredential.user != null;
    } catch (e) {
      print(e.toString());
      return false;
    }
  }

  // Logout
  Future<void> logout() async {
    await _auth.signOut();
  }

  // Get current user
  User? getCurrentUser() {
    return _auth.currentUser;
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\company_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:business_management_app/models/company.dart';

class CompanyService {
  final CollectionReference _companyCollection = FirebaseFirestore.instance.collection('companies');

  Future<List<Company>> getAllCompanies() async {
    QuerySnapshot querySnapshot = await _companyCollection.get();
    return querySnapshot.docs.map((doc) => Company.fromMap(doc.data() as Map<String, dynamic>)).toList();
  }

  Future<Company> getCompanyById(String id) async {
    DocumentSnapshot doc = await _companyCollection.doc(id).get();
    return Company.fromMap(doc.data() as Map<String, dynamic>);
  }

  Future<void> addCompany(Company company) async {
    await _companyCollection.doc(company.id).set(company.toMap());
  }

  Future<void> updateCompany(Company company) async {
    await _companyCollection.doc(company.id).update(company.toMap());
  }

  Future<void> deleteCompany(String id) async {
    await _companyCollection.doc(id).delete();
  }

  Future<void> addPreConfiguredCompanies() async {
    List<Company> companies = [
      Company(
        id: 'companyId1',
        name: 'Mormove',
        ceoId: 'ceoId1',
        ceoName: 'SABER ABDERRAHIME',
        ceoEmail: 'ceo1@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 15,
        projects: [],
        statusColor: 'green',
      ),
      Company(
        id: 'companyId2',
        name: 'Morjib',
        ceoId: 'ceoId2',
        ceoName: 'HIBA LMOUAACHI',
        ceoEmail: 'ceo2@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 20,
        projects: [],
        statusColor: 'yellow',
      ),
      Company(
        id: 'companyId3',
        name: 'SMHorizon',
        ceoId: 'ceoId3',
        ceoName: 'MOUNIR SABIR',
        ceoEmail: 'ceo3@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 13,
        projects: [],
        statusColor: 'yellow',
      ),
      Company(
        id: 'companyId4',
        name: '12 Daba',
        ceoId: 'ceoId4',
        ceoName: 'HAFSA BOUAZZA',
        ceoEmail: 'ceo4@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 25,
        projects: [],
        statusColor: 'yellow',
      ),
      Company(
        id: 'companyId5',
        name: 'Investdar',
        ceoId: 'ceoId5',
        ceoName: 'HIBA LMOUAACHI',
        ceoEmail: 'ceo5@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 9,
        projects: [],
        statusColor: 'yellow',
      ),
      Company(
        id: 'companyId6',
        name: 'xxxxxxxxxx',
        ceoId: 'ceoId6',
        ceoName: 'MOUNIR SABIR',
        ceoEmail: 'ceo6@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 21,
        projects: [],
        statusColor: 'yellow',
      ),
      Company(
        id: 'companyId7',
        name: 'MadConsolutions',
        ceoId: 'ceoId7',
        ceoName: 'MAHEDI HASAN MAJID',
        ceoEmail: 'ceo7@example.com',
        ceoPhone: '123-456-7890',
        ceoWhatsApp: '123-456-7890',
        employeeCount: 32,
        projects: [],
        statusColor: 'yellow',
      ),
    ];

    for (Company company in companies) {
      await addCompany(company);
    }
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\project_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:business_management_app/models/project.dart';

class ProjectService {
  final CollectionReference _projectCollection = FirebaseFirestore.instance.collection('projects');

  Future<void> addProject(Project project) async {
    await _projectCollection.doc(project.id).set(project.toMap());
  }

  Future<Project> getProject(String id) async {
    DocumentSnapshot doc = await _projectCollection.doc(id).get();
    return Project.fromMap(doc.data() as Map<String, dynamic>);
  }

  Future<void> updateProject(Project project) async {
    await _projectCollection.doc(project.id).update(project.toMap());
  }

  Future<void> deleteProject(String id) async {
    await _projectCollection.doc(id).delete();
  }

  Future<List<Project>> getProjectsForCompany(String companyId) async {
    QuerySnapshot querySnapshot = await _projectCollection.where('companyId', isEqualTo: companyId).get();
    return querySnapshot.docs.map((doc) => Project.fromMap(doc.data() as Map<String, dynamic>)).toList();
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\user_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart' as FirebaseAuthUser;
import 'package:business_management_app/models/user.dart';

class UserService {
  final FirebaseAuthUser.FirebaseAuth _auth = FirebaseAuthUser.FirebaseAuth.instance;
  final CollectionReference _userCollection = FirebaseFirestore.instance.collection('users');

  Future<User> getCurrentUser() async {
    final firebaseUser = _auth.currentUser!;
    final userData = await _userCollection.doc(firebaseUser.uid).get();
    return User.fromMap(userData.data() as Map<String, dynamic>);
  }

  Future<void> addUser(User user) async {
    await _userCollection.doc(user.id).set(user.toMap());
  }

  Future<User> getUser(String userId) async {
    final userData = await _userCollection.doc(userId).get();
    return User.fromMap(userData.data() as Map<String, dynamic>);
  }

  Future<void> updateUser(User user) async {
    await _userCollection.doc(user.id).update(user.toMap());
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\utils\constants.dart


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\utils\theme.dart
import 'package:flutter/material.dart';

ThemeData appTheme() {
  return ThemeData(
    primarySwatch: Colors.blue,
    visualDensity: VisualDensity.adaptivePlatformDensity,
    textTheme: const TextTheme(
      headline1: TextStyle(fontSize: 32.0, fontWeight: FontWeight.bold, color: Colors.black),
      headline6: TextStyle(fontSize: 24.0, fontWeight: FontWeight.bold, color: Colors.black),
      bodyText1: TextStyle(fontSize: 16.0, color: Colors.black),
      bodyText2: TextStyle(fontSize: 14.0, color: Colors.black54),
    ),
    buttonTheme: const ButtonThemeData(
      buttonColor: Colors.blue,
      textTheme: ButtonTextTheme.primary,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.all(Radius.circular(8.0)),
      ),
    ),
    appBarTheme: const AppBarTheme(
      color: Colors.blue,
      titleTextStyle: TextStyle(
        fontSize: 20.0,
        fontWeight: FontWeight.bold,
        color: Colors.white,
      ),
      toolbarTextStyle: TextStyle(
        fontSize: 20.0,
        fontWeight: FontWeight.bold,
        color: Colors.white,
      ),
    ),
  );
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\company_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';

class CompanyCard extends StatelessWidget {
  final Company company;

  CompanyCard({required this.company});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: EdgeInsets.all(8.0),
      child: ListTile(
        title: Text(company.name, style: Theme.of(context).textTheme.headline6),
        subtitle: Text('Employees: ${company.employeeCount}'),
        trailing: CircleAvatar(
          backgroundColor: _getStatusColor(company.statusColor),
        ),
        onTap: () {
          // Handle card tap
        },
      ),
    );
  }

  Color _getStatusColor(String statusColor) {
    switch (statusColor) {
      case 'red':
        return Colors.red;
      case 'yellow':
        return Colors.yellow;
      case 'green':
        return Colors.green;
      default:
        return Colors.grey;
    }
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\project_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/screens/project_details_screen.dart';
import 'package:business_management_app/screens/edit_project_screen.dart';

class ProjectCard extends StatelessWidget {
  final Project project;
  final VoidCallback onView;
  final VoidCallback onUpdate;

  ProjectCard({required this.project, required this.onView, required this.onUpdate});

  @override
  Widget build(BuildContext context) {
    return Card(
      color: Colors.lightBlue[100],
      child: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              project.name,
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            Row(
              children: [
                TextButton(
                  onPressed: onView,
                  child: Text('view'),
                  style: TextButton.styleFrom(
                    foregroundColor: Colors.white,
                    backgroundColor: Colors.lightBlue,
                  ),
                ),
                SizedBox(width: 8),
                TextButton(
                  onPressed: onUpdate,
                  child: Text('update'),
                  style: TextButton.styleFrom(
                    foregroundColor: Colors.white,
                    backgroundColor: Colors.lightBlue,
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}


 File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\user_profile.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/user.dart';

class UserProfile extends StatelessWidget {
  final User user;

  UserProfile({required this.user});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: EdgeInsets.all(8.0),
      child: ListTile(
        title: Text(user.name, style: Theme.of(context).textTheme.headline6),
        subtitle: Text('Email: ${user.email}'),
        trailing: Text(user.role),
        onTap: () {
          // Handle card tap
        },
      ),
    );
  }
}



    File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\company.dart
class Company {
  final String id;
  final String name;
  final String ceoId;
  final String ceoName;
  final String ceoEmail;
  final String ceoPhone;
  final String ceoWhatsApp;
  final int employeeCount;
  final List<String> projects;
  final String statusColor;

  Company({
    required this.id,
    required this.name,
    required this.ceoId,
    required this.ceoName,
    required this.ceoEmail,
    required this.ceoPhone,
    required this.ceoWhatsApp,
    required this.employeeCount,
    required this.projects,
    required this.statusColor,
  });

  factory Company.fromMap(Map<String, dynamic> data) {
    return Company(
      id: data['id'],
      name: data['name'],
      ceoId: data['ceoId'],
      ceoName: data['ceoName'],
      ceoEmail: data['ceoEmail'],
      ceoPhone: data['ceoPhone'],
      ceoWhatsApp: data['ceoWhatsApp'],
      employeeCount: data['employeeCount'],
      projects: List<String>.from(data['projects']),
      statusColor: data['statusColor'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'ceoId': ceoId,
      'ceoName': ceoName,
      'ceoEmail': ceoEmail,
      'ceoPhone': ceoPhone,
      'ceoWhatsApp': ceoWhatsApp,
      'employeeCount': employeeCount,
      'projects': projects,
      'statusColor': statusColor,
    };
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\project.dart
class Project {
  final String id;
  final String name;
  final DateTime start;
  final DateTime end;
  final double budget;
  final String details;
  final String status;
  final String leaderId;

  Project({
    required this.id,
    required this.name,
    required this.start,
    required this.end,
    required this.budget,
    required this.details,
    required this.status,
    required this.leaderId,
  });

  factory Project.fromMap(Map<String, dynamic> data) {
    return Project(
      id: data['id'],
      name: data['name'],
      start: DateTime.parse(data['start']),
      end: DateTime.parse(data['end']),
      budget: data['budget'],
      details: data['details'],
      status: data['status'],
      leaderId: data['leaderId'],
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'start': start.toIso8601String(),
      'end': end.toIso8601String(),
      'budget': budget,
      'details': details,
      'status': status,
      'leaderId': leaderId,
    };
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\models\user.dart
// user.dart
class User {
  String id;
  String name;
  String email;
  String role;
  String companyId;
  String whatsapp;
  String description;
  String profileImage;

  User({
    required this.id,
    required this.name,
    required this.email,
    required this.role,
    required this.companyId,
    required this.whatsapp,
    required this.description,
    required this.profileImage,
  });

  Map<String, dynamic> toMap() {
    return {
      'name': name,
      'email': email,
      'role': role,
      'companyId': companyId,
      'whatsapp': whatsapp,
      'description': description,
      'profileImage': profileImage,
    };
  }

  factory User.fromMap(Map<String, dynamic> map) {
    return User(
      id: map['id'] ?? '',
      name: map['name'] ?? '',
      email: map['email'] ?? '',
      role: map['role'] ?? '',
      companyId: map['companyId'] ?? '',
      whatsapp: map['whatsapp'] ?? '',
      description: map['description'] ?? '',
      profileImage: map['profileImage'] ?? '',
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\add_project_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class AddProjectScreen extends StatefulWidget {
  final String companyId;

  AddProjectScreen({required this.companyId});

  @override
  _AddProjectScreenState createState() => _AddProjectScreenState();
}

class _AddProjectScreenState extends State<AddProjectScreen> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _startDateController = TextEditingController();
  final _endDateController = TextEditingController();
  final _budgetController = TextEditingController();

  void _submit() {
    if (_formKey.currentState!.validate()) {
      // Add the project to the database
      // You should call your service to add the project here

      print('Project added successfully for companyId: ${widget.companyId}');
      // Pop the screen and return to the dashboard
      Navigator.pop(context);
    } else {
      print('Form validation failed');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Add Project', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: SingleChildScrollView(
            child: Column(
              children: [
                _buildTextFormField(_nameController, 'Project Name'),
                _buildTextFormField(_descriptionController, 'Description'),
                _buildTextFormField(_startDateController, 'Start Date'),
                _buildTextFormField(_endDateController, 'End Date'),
                _buildTextFormField(_budgetController, 'Budget'),
                SizedBox(height: 20),
                ElevatedButton(
                  onPressed: _submit,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFFD97757),
                    padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                    textStyle: GoogleFonts.rubik(fontSize: 18),
                  ),
                  child: Text('Add Project', style: TextStyle(color: Colors.white)),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextFormField(TextEditingController controller, String labelText) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextFormField(
        controller: controller,
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Please enter a $labelText';
          }
          return null;
        },
        style: GoogleFonts.rubik(),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\ai_chat_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:cloud_firestore/cloud_firestore.dart';

class AIChatScreen extends StatefulWidget {
  final bool isDarkTheme;

  AIChatScreen({required this.isDarkTheme});

  @override
  _AIChatScreenState createState() => _AIChatScreenState();
}

class _AIChatScreenState extends State<AIChatScreen> {
  final TextEditingController _controller = TextEditingController();
  List<Map<String, String>> _messages = [];
  bool _isLoading = false;

  Future<Map<String, dynamic>> fetchFirestoreData() async {
    FirebaseFirestore firestore = FirebaseFirestore.instance;

    // Fetch companies
    QuerySnapshot companySnapshot = await firestore.collection('companies').get();
    List<Map<String, dynamic>> companies = companySnapshot.docs
        .map((doc) => doc.data() as Map<String, dynamic>)
        .toList();

    // Fetch CEOs
    QuerySnapshot ceoSnapshot = await firestore.collection('ceos').get();
    List<Map<String, dynamic>> ceos = ceoSnapshot.docs
        .map((doc) => doc.data() as Map<String, dynamic>)
        .toList();

    // Fetch projects
    QuerySnapshot projectSnapshot = await firestore.collection('projects').get();
    List<Map<String, dynamic>> projects = projectSnapshot.docs
        .map((doc) => doc.data() as Map<String, dynamic>)
        .toList();

    return {
      'companies': companies,
      'ceos': ceos,
      'projects': projects,
    };
  }

  Future<void> _sendMessage(String message) async {
    setState(() {
      _messages.add({"role": "user", "content": message});
      _isLoading = true;
    });

    // Fetch Firestore data
    final firestoreData = await fetchFirestoreData();

    // Create a system message to include the context
    final contextMessage = {
      "role": "system",
      "content": "Context: Companies - ${firestoreData['companies']}, CEOs - ${firestoreData['ceos']}, Projects - ${firestoreData['projects']}"
    };

    final apiKey = 'sk-proj-zuC8iJMN0OAjBE2fdrvST3BlbkFJg6uJPDSNJzbwkzyQ0mri';
    final url = 'https://api.openai.com/v1/chat/completions';

    final payload = {
      "model": "gpt-3.5-turbo",
      "messages": [
        contextMessage,
        {"role": "user", "content": message}
      ]
    };

    try {
      final response = await http.post(
        Uri.parse(url),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $apiKey',
        },
        body: json.encode(payload),
      );

      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        final content = data['choices'][0]['message']['content'];
        setState(() {
          _messages.add({"role": "ai", "content": content});
        });
      } else {
        setState(() {
          _messages.add({"role": "error", "content": 'Error: ${response.statusCode}\n${response.body}'});
        });
      }
    } catch (e) {
      setState(() {
        _messages.add({"role": "error", "content": 'Error: $e'});
      });
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  Widget _buildMessage(Map<String, String> message) {
    bool isUser = message['role'] == 'user';
    bool isAI = message['role'] == 'ai';
    return Align(
      alignment: isUser ? Alignment.centerRight : Alignment.centerLeft,
      child: Container(
        padding: EdgeInsets.all(12),
        margin: EdgeInsets.symmetric(vertical: 8, horizontal: 16),
        decoration: BoxDecoration(
          color: isUser ? const Color.fromARGB(255, 255, 255, 255) : (isAI ? const Color.fromARGB(255, 227, 227, 227) : Colors.red[100]),
          borderRadius: BorderRadius.circular(16),
        ),
        child: Text(
          message['content'] ?? '',
          style: GoogleFonts.nunito(
            fontSize: 16,
            color: isUser ? const Color.fromARGB(255, 0, 0, 0) : (isAI ? Colors.black : Colors.red[900]),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'AI Chat',
          style: GoogleFonts.nunito(color: Colors.white)),
        backgroundColor: Color(0xFFD97757),
        elevation: 0,
        // Remove the back button
        automaticallyImplyLeading: false,
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              widget.isDarkTheme ? Color(0xFF2C2B28) : Color(0xFFF2F0E8),
              widget.isDarkTheme ? Color(0xFF2C2B28) : Color(0xFFF2F0E8),
            ],
          ),
        ),
        child: Column(
          children: [
            Expanded(
              child: ListView.builder(
                itemCount: _messages.length,
                itemBuilder: (context, index) {
                  return _buildMessage(_messages[index]);
                },
              ),
            ),
            if (_isLoading)
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: CircularProgressIndicator(),
              ),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Container(
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(24),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.grey.withOpacity(0.5),
                      spreadRadius: 2,
                      blurRadius: 5,
                      offset: Offset(0, 3),
                    ),
                  ],
                ),
                child: Row(
                  children: [
                    Expanded(
                      child: TextField(
                        controller: _controller,
                        decoration: InputDecoration(
                          hintText: 'Enter your question',
                          border: InputBorder.none,
                          contentPadding: EdgeInsets.symmetric(horizontal: 16, vertical: 15),
                        ),
                        style: GoogleFonts.nunito(fontSize: 16),
                      ),
                    ),
                    GestureDetector(
                      onTap: () {
                        if (_controller.text.isNotEmpty) {
                          _sendMessage(_controller.text);
                          _controller.clear();
                        }
                      },
                      child: Container(
                        padding: EdgeInsets.all(9),
                        decoration: BoxDecoration(
                          color: Color(0xFFD97757),
                          borderRadius: BorderRadius.circular(24),
                        ),
                        child: Icon(
                          Icons.send,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    SizedBox(width: 8),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\boss_dashboard.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/services/company_service.dart';
import 'package:business_management_app/services/project_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/widgets/company_card.dart';
import 'package:business_management_app/widgets/latest_project_card.dart';
import 'package:business_management_app/widgets/ceo_card.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:business_management_app/screens/project_details_screen.dart';
import 'package:business_management_app/screens/ai_chat_screen.dart';
import 'package:business_management_app/screens/settings_screen.dart';
import 'package:business_management_app/screens/notifications_screen.dart';
import 'package:business_management_app/models/user.dart' as AppUser;

class BossDashboard extends StatefulWidget {
  @override
  _BossDashboardState createState() => _BossDashboardState();
}

class _BossDashboardState extends State<BossDashboard> {
  final CompanyService _companyService = CompanyService();
  final ProjectService _projectService = ProjectService();
  final UserService _userService = UserService();
  List<Company> _companies = [];
  List<Project> _projects = [];
  List<AppUser.User> _ceos = [];
  int _selectedIndex = 0;

  @override
  void initState() {
    super.initState();
    _loadCompanies();
    _loadProjects();
    _loadCEOs();
  }

  Future<void> _loadCompanies() async {
    List<Company> companies = await _companyService.getAllCompanies();
    setState(() {
      _companies = companies;
    });
  }

  Future<void> _loadProjects() async {
    List<Project> projects = await _projectService.getLatestProjects();
    setState(() {
      _projects = projects;
    });
  }

  Future<void> _loadCEOs() async {
    List<AppUser.User> ceos = await _userService.getAllCEOs();
    setState(() {
      _ceos = ceos;
    });
  }

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  List<Widget> _widgetOptions() {
    return <Widget>[
      Scaffold(
        appBar: AppBar(
          title: Text(
            'Boss Dashboard',
            style: GoogleFonts.rubik(fontSize: 20),
          ),
          backgroundColor: Color(0xFFD97757),
          automaticallyImplyLeading: false, // Remove the back button
        ),
        body: BossDashboardContent(companies: _companies, projects: _projects, ceos: _ceos),
      ),
      AIChatScreen(isDarkTheme: true),
      NotificationsScreen(),
      SettingsScreen(),
    ];
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8), // Background color
      body: _widgetOptions().elementAt(_selectedIndex),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.chat),
            label: 'AI Chat',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.notifications),
            label: 'Notifications',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.settings),
            label: 'Settings',
          ),
        ],
        currentIndex: _selectedIndex,
        selectedItemColor: Colors.amber[800],
        unselectedItemColor: Colors.grey,
        onTap: _onItemTapped,
      ),
    );
  }
}

class BossDashboardContent extends StatelessWidget {
  final List<Company> companies;
  final List<Project> projects;
  final List<AppUser.User> ceos;

  BossDashboardContent({
    required this.companies,
    required this.projects,
    required this.ceos,
  });

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // My Companies section
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Text(
              'My Companies',
              style: GoogleFonts.rubik(
                  fontSize: 24, fontWeight: FontWeight.bold),
            ),
          ),
          SizedBox(height: 16),
          // Company carousel
          CarouselSlider(
            options: CarouselOptions(
              height: 200.0,
              viewportFraction: 0.8,
              enlargeCenterPage: true,
              enableInfiniteScroll: true,
              scrollDirection: Axis.horizontal,
              autoPlay: false, // Disable automatic sliding
              autoPlayInterval: Duration(seconds: 3),
              autoPlayAnimationDuration: Duration(milliseconds: 800),
            ),
            items: companies.map((company) {
              return GestureDetector(
                onTap: () {
                  Navigator.pushNamed(
                    context,
                    '/company_details',
                    arguments: company.id,
                  );
                },
                child: CompanyCard(company: company),
              );
            }).toList(),
          ),
          SizedBox(height: 32),
          // Latest projects section
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Text(
              'Latest Projects',
              style: GoogleFonts.rubik(
                  fontSize: 24, fontWeight: FontWeight.bold),
            ),
          ),
          SizedBox(height: 16),
          // Project carousel
          CarouselSlider(
            options: CarouselOptions(
              height: 200.0,
              viewportFraction: 0.8,
              enlargeCenterPage: true,
              enableInfiniteScroll: true,
              scrollDirection: Axis.horizontal,
              autoPlay: true,
              autoPlayInterval: Duration(seconds: 3),
              autoPlayAnimationDuration: Duration(milliseconds: 800),
            ),
            items: projects.map((project) {
              return GestureDetector(
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) =>
                          ProjectDetailsScreen(project: project),
                    ),
                  );
                },
                child: LatestProjectCard(project: project),
              );
            }).toList(),
          ),
          SizedBox(height: 32),
          // CEOs section
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Text(
              'CEOs',
              style: GoogleFonts.rubik(
                  fontSize: 24, fontWeight: FontWeight.bold),
            ),
          ),
          SizedBox(height: 16),
          // CEO list
          Container(
            height: 150, // Adjust height as needed
            child: ListView.builder(
              scrollDirection: Axis.horizontal,
              itemCount: ceos.length,
              itemBuilder: (context, index) {
                return Container(
                  width: 120, // Adjust width as needed
                  child: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 8.0),
                    child: CEOCard(user: ceos[index]),
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\ceo_dashboard.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/services/company_service.dart';
import 'package:business_management_app/services/project_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart' as AppUser;
import 'package:business_management_app/screens/add_project_screen.dart';
import 'package:business_management_app/screens/edit_project_screen.dart';
import 'package:business_management_app/screens/project_details_screen.dart';
import 'package:business_management_app/screens/report_issue_screen.dart';
import 'package:business_management_app/screens/send_notification_screen.dart';
import 'package:business_management_app/widgets/project_card.dart';

class CEODashboard extends StatefulWidget {
  @override
  _CEODashboardState createState() => _CEODashboardState();
}

class _CEODashboardState extends State<CEODashboard> {
  final CompanyService _companyService = CompanyService();
  final ProjectService _projectService = ProjectService();
  final UserService _userService = UserService();
  List<Project> _projects = [];
  Company? _selectedCompany;
  AppUser.User? _user;

  @override
  void initState() {
    super.initState();
    _loadUserAndCompany();
  }

  Future<void> _loadUserAndCompany() async {
    AppUser.User? user = await _userService.getCurrentUser();
    setState(() {
      _user = user;
    });

    if (user != null && user.companyId.isNotEmpty) {
      Company company = await _companyService.getCompanyById(user.companyId);
      setState(() {
        _selectedCompany = company;
      });

      _loadProjects(company.id);
    }
  }

  Future<void> _loadProjects(String companyId) async {
    List<Project> projects = await _projectService.getProjectsForCompany(companyId);
    setState(() {
      _projects = projects;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('CEO Dashboard', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
        actions: [
          IconButton(
            icon: Icon(Icons.account_circle),
            onPressed: () {
              Navigator.pushNamed(context, '/profile');
            },
          ),
          IconButton(
            icon: Icon(Icons.logout),
            onPressed: () {
              // Handle logout
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            if (_user != null) _buildProfileHeader(),
            _buildActionButtons(),
            if (_selectedCompany != null) _buildProjectsSection(),
          ],
        ),
      ),
      floatingActionButton: _selectedCompany != null
          ? FloatingActionButton(
              onPressed: () {
                if (_selectedCompany != null) {
                  Navigator.pushNamed(
                    context,
                    '/add_project',
                    arguments: _selectedCompany!.id,
                  ).then((value) => _loadProjects(_selectedCompany!.id));
                }
              },
              backgroundColor: Color(0xFFD97757),
              child: Icon(Icons.add),
            )
          : null,
    );
  }

  Widget _buildProfileHeader() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Row(
        children: [
          CircleAvatar(
            backgroundImage: NetworkImage(_user?.profileImage ?? 'https://via.placeholder.com/150'),
            radius: 30,
          ),
          SizedBox(width: 16),
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                _user?.name ?? 'Unknown',
                style: GoogleFonts.rubik(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              Text(
                'the CEO of ${_selectedCompany?.name ?? 'no company selected'}',
                style: GoogleFonts.rubik(fontSize: 16, color: Colors.grey),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildActionButtons() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        children: [
          _buildActionButton('Add a project', () {
            if (_selectedCompany != null) {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => AddProjectScreen(companyId: _selectedCompany!.id)),
              ).then((value) => _loadProjects(_selectedCompany!.id));
            }
          }, Icons.add),
          _buildActionButton('Report an issue', () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => ReportIssueScreen()),
            );
          }, Icons.report),
          _buildActionButton('Send a notification', () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => SendNotificationScreen()),
            );
          }, Icons.notification_add),
        ],
      ),
    );
  }

  Widget _buildActionButton(String title, VoidCallback onPressed, IconData icon) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: Color(0xFFD97757),
          padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
          textStyle: GoogleFonts.rubik(fontSize: 18),
        ),
        onPressed: onPressed,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(icon, color: Colors.white),
            SizedBox(width: 8),
            Text(title, style: TextStyle(color: Colors.white)),
          ],
        ),
      ),
    );
  }

  Widget _buildProjectsSection() {
    return Column(
      children: [
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Text(
            'Projects',
            style: GoogleFonts.rubik(fontSize: 24, fontWeight: FontWeight.bold),
          ),
        ),
        _buildProjectsList(),
      ],
    );
  }

  Widget _buildProjectsList() {
    return ListView.builder(
      shrinkWrap: true,
      physics: NeverScrollableScrollPhysics(),
      itemCount: _projects.length,
      itemBuilder: (context, index) {
        return ProjectCard(
          project: _projects[index],
          onView: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => ProjectDetailsScreen(project: _projects[index]),
              ),
            );
          },
          onUpdate: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => EditProjectScreen(project: _projects[index]),
              ),
            ).then((value) => _loadProjects(_selectedCompany!.id));
          },
        );
      },
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\company_details_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/services/company_service.dart';

class CompanyDetailsScreen extends StatelessWidget {
  final String companyId;

  CompanyDetailsScreen({required this.companyId});

  final CompanyService _companyService = CompanyService();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Company Details', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: FutureBuilder<Company>(
        future: _companyService.getCompanyById(companyId),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            return Center(child: Text('Error loading company details'));
          } else {
            Company? company = snapshot.data;
            return company != null ? _buildCompanyDetails(context, company) : Center(child: Text('Company not found'));
          }
        },
      ),
    );
  }

  Widget _buildCompanyDetails(BuildContext context, Company company) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            company.name,
            style: GoogleFonts.rubik(fontSize: 24, fontWeight: FontWeight.bold),
          ),
          SizedBox(height: 8),
          Text(
            'CEO ID: ${company.ceoId}',
            style: GoogleFonts.rubik(fontSize: 16),
          ),
          SizedBox(height: 16),
          Text(
            'Projects',
            style: GoogleFonts.rubik(fontSize: 20, fontWeight: FontWeight.bold),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: company.projects.length,
              itemBuilder: (context, index) {
                var project = company.projects[index];
                return ListTile(
                  title: Text(project, style: GoogleFonts.rubik()),
                  // Modify the line below if your project contains more details
                  subtitle: Text('Project details here', style: GoogleFonts.rubik()),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\contact_ceo_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';

class ContactCEOScreen extends StatelessWidget {
  final Company company;

  ContactCEOScreen({required this.company});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Contact CEO'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Name: ${company.ceoName}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'Email: ${company.ceoEmail}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'Phone: ${company.ceoPhone}',
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 8),
            Text(
              'WhatsApp: ${company.ceoWhatsApp}',
              style: TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\edit_project_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/services/project_service.dart';

class EditProjectScreen extends StatefulWidget {
  final Project project;

  EditProjectScreen({required this.project});

  @override
  _EditProjectScreenState createState() => _EditProjectScreenState();
}

class _EditProjectScreenState extends State<EditProjectScreen> {
  final _nameController = TextEditingController();
  final _budgetController = TextEditingController();
  final _detailsController = TextEditingController();
  final ProjectService _projectService = ProjectService();

  @override
  void initState() {
    super.initState();
    _nameController.text = widget.project.name;
    _budgetController.text = widget.project.budget.toString();
    _detailsController.text = widget.project.details;
  }

  void _editProject() async {
    final name = _nameController.text;
    final budget = double.tryParse(_budgetController.text) ?? 0;
    final details = _detailsController.text;

    Project updatedProject = Project(
      id: widget.project.id,
      name: name,
      start: widget.project.start,
      end: widget.project.end,
      budget: budget,
      details: details,
      status: widget.project.status,
      leaderId: widget.project.leaderId,
    );

    await _projectService.updateProject(updatedProject);
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Edit Project'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _nameController,
              decoration: InputDecoration(labelText: 'Project Name'),
            ),
            TextField(
              controller: _budgetController,
              decoration: InputDecoration(labelText: 'Budget'),
              keyboardType: TextInputType.number,
            ),
            TextField(
              controller: _detailsController,
              decoration: InputDecoration(labelText: 'Details'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _editProject,
              child: Text('Save Changes'),
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\initial_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class InitialScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Welcome', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Image.asset('assets/logo.png', height: 150),
              SizedBox(height: 40),
              ElevatedButton(
                onPressed: () {
                  Navigator.pushNamed(context, '/login', arguments: 'Boss');
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 32, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18, fontWeight: FontWeight.bold),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10.0),
                  ),
                ),
                child: Text('I am a Boss', style: TextStyle(color: Colors.white)),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  showDialog(
                    context: context,
                    builder: (context) => AlertDialog(
                      title: Text('CEO Login or Sign Up', style: GoogleFonts.rubik()),
                      content: Text('Are you an existing CEO or a new CEO?', style: GoogleFonts.rubik()),
                      actions: [
                        TextButton(
                          onPressed: () {
                            Navigator.pop(context); // Close dialog
                            Navigator.pushNamed(context, '/login', arguments: 'CEO');
                          },
                          child: Text('Login', style: GoogleFonts.rubik(color: Color(0xFFD97757))),
                        ),
                        TextButton(
                          onPressed: () {
                            Navigator.pop(context); // Close dialog
                            Navigator.pushNamed(context, '/signup');
                          },
                          child: Text('Sign Up', style: GoogleFonts.rubik(color: Color(0xFFD97757))),
                        ),
                      ],
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 32, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18, fontWeight: FontWeight.bold),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10.0),
                  ),
                ),
                child: Text('I am a CEO', style: TextStyle(color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\login.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/services/auth_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart';

class LoginScreen extends StatefulWidget {
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final AuthService _authService = AuthService();
  final UserService _userService = UserService();
  String? _role;

  // Hardcoded credentials for the boss
  final String _bossEmail = 'boss@example.com';
  final String _bossPassword = 'boss1234';

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    _role = ModalRoute.of(context)!.settings.arguments as String?;
  }

  void _login() async {
    final email = _emailController.text;
    final password = _passwordController.text;

    // Check if the entered credentials match the hardcoded boss credentials
    if (email == _bossEmail && password == _bossPassword) {
      Navigator.pushReplacementNamed(context, '/boss_dashboard');
      return;
    }

    // Proceed with normal authentication for other users
    bool success = await _authService.login(email, password);
    if (success) {
      User? user = await _userService.getCurrentUser();
      if (user != null) {
        if (user.role == 'Boss' || _role == 'Boss') {
          Navigator.pushReplacementNamed(context, '/boss_dashboard');
        } else if (user.role == 'CEO' || _role == 'CEO') {
          Navigator.pushReplacementNamed(context, '/ceo_dashboard');
        }
      } else {
        // Handle the case where user is null
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('User not found')),
        );
      }
    } else {
      // Show error message
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Login failed')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Login', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            _buildTextField(_emailController, 'Email'),
            _buildTextField(_passwordController, 'Password', obscureText: true),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _login,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFFD97757),
                padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                textStyle: GoogleFonts.rubik(fontSize: 18),
              ),
              child: Text('Login', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String labelText, {bool obscureText = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextField(
        controller: controller,
        obscureText: obscureText,
        style: GoogleFonts.rubik(),
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\messages_screen.dart
import 'package:flutter/material.dart';

class MessagesScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Messages'),
      ),
      body: Center(
        child: Text('Messaging functionality coming soon...'),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\notifications_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class NotificationsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Notifications', style: GoogleFonts.rubik(fontSize: 20)),
        backgroundColor: Color(0xFFD97757),
        // Remove the back button
        automaticallyImplyLeading: false,
      ),
      body: Center(
        child: Text(
          'Notifications Screen Placeholder',
          style: GoogleFonts.rubik(fontSize: 24),
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\profile_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/models/user.dart' as AppUser;
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/services/auth_service.dart';

class ProfileScreen extends StatefulWidget {
  @override
  _ProfileScreenState createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen> {
  final UserService _userService = UserService();
  final AuthService _authService = AuthService();
  AppUser.User? _user;
  final _nameController = TextEditingController();
  final _emailController = TextEditingController();
  final _whatsappController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _profileImageController = TextEditingController();

  @override
  void initState() {
    super.initState();
    _loadUserProfile();
  }

  Future<void> _loadUserProfile() async {
    AppUser.User? user = await _userService.getCurrentUser();
    setState(() {
      _user = user;
      if (user != null) {
        _nameController.text = user.name;
        _emailController.text = user.email;
        _whatsappController.text = user.whatsapp ?? '';
        _descriptionController.text = user.description ?? '';
        _profileImageController.text = user.profileImage ?? '';
      }
    });
  }

  void _saveProfile() async {
    if (_user != null) {
      AppUser.User updatedUser = AppUser.User(
        id: _user!.id,
        name: _nameController.text,
        email: _emailController.text,
        role: _user!.role,
        companyId: _user!.companyId,
        whatsapp: _whatsappController.text,
        description: _descriptionController.text,
        profileImage: _profileImageController.text,
      );
      await _userService.updateUser(updatedUser);
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Profile updated successfully')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Profile', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              _buildTextField(_nameController, 'Name'),
              _buildTextField(_emailController, 'Email', readOnly: true),
              _buildTextField(_whatsappController, 'WhatsApp'),
              _buildTextField(_descriptionController, 'Description'),
              _buildTextField(_profileImageController, 'Profile Image URL'),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _saveProfile,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18),
                ),
                child: Text('Save', style: TextStyle(color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String labelText, {bool readOnly = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextField(
        controller: controller,
        readOnly: readOnly,
        style: GoogleFonts.rubik(),
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\project_details_screen.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';

class ProjectDetailsScreen extends StatelessWidget {
  final Project project;

  ProjectDetailsScreen({required this.project});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(project.name),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Description',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text(project.details),
            SizedBox(height: 16),
            Text(
              'Goals',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('goals here'),
            SizedBox(height: 16),
            Text(
              'Start and end date',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('${project.start.toLocal()} to ${project.end.toLocal()}'),
            SizedBox(height: 16),
            Text(
              'Budget',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Text('${project.budget}'),
            SizedBox(height: 16),
            Text(
              'Team members',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 8),
            Row(
              children: [
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
                SizedBox(width: 8),
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
                SizedBox(width: 8),
                CircleAvatar(
                  backgroundImage: NetworkImage('https://via.placeholder.com/150'), // Team member image URL
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\report_issue_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class ReportIssueScreen extends StatefulWidget {
  @override
  _ReportIssueScreenState createState() => _ReportIssueScreenState();
}

class _ReportIssueScreenState extends State<ReportIssueScreen> {
  final _issueController = TextEditingController();

  void _reportIssue() {
    final issue = _issueController.text;
    // Implement issue reporting logic here
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Report an Issue', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _issueController,
              decoration: InputDecoration(
                labelText: 'Describe the issue',
                labelStyle: GoogleFonts.rubik(),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
                filled: true,
                fillColor: Colors.white,
              ),
              maxLines: 5,
              style: GoogleFonts.rubik(),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _reportIssue,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFFD97757),
                padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                textStyle: GoogleFonts.rubik(fontSize: 18),
              ),
              child: Text('Report Issue', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\send_notification_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class SendNotificationScreen extends StatefulWidget {
  @override
  _SendNotificationScreenState createState() => _SendNotificationScreenState();
}

class _SendNotificationScreenState extends State<SendNotificationScreen> {
  final _notificationController = TextEditingController();

  void _sendNotification() {
    final notification = _notificationController.text;
    // Implement notification sending logic here
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Send a Notification', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _notificationController,
              decoration: InputDecoration(
                labelText: 'Notification message',
                labelStyle: GoogleFonts.rubik(),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
                filled: true,
                fillColor: Colors.white,
              ),
              maxLines: 5,
              style: GoogleFonts.rubik(),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _sendNotification,
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFFD97757),
                padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                textStyle: GoogleFonts.rubik(fontSize: 18),
              ),
              child: Text('Send Notification', style: TextStyle(color: Colors.white)),
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\settings_screen.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

class SettingsScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Settings', style: GoogleFonts.rubik(fontSize: 20)),
        backgroundColor: Color(0xFFD97757),
        // Remove the back button
        automaticallyImplyLeading: false,
      ),
      body: Center(
        child: Text(
          'Settings Screen Placeholder',
          style: GoogleFonts.rubik(fontSize: 24),
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\screens\signup.dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:business_management_app/services/auth_service.dart';
import 'package:business_management_app/services/user_service.dart';
import 'package:business_management_app/models/user.dart';
import 'package:business_management_app/models/company.dart';
import 'package:business_management_app/services/company_service.dart';

class SignUpScreen extends StatefulWidget {
  @override
  _SignUpScreenState createState() => _SignUpScreenState();
}

class _SignUpScreenState extends State<SignUpScreen> {
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final _nameController = TextEditingController();
  final _whatsappController = TextEditingController();
  final _descriptionController = TextEditingController();
  final _profileImageController = TextEditingController(); // Assume URL for simplicity
  final CompanyService _companyService = CompanyService();
  final AuthService _authService = AuthService();
  final UserService _userService = UserService();
  String _selectedCompanyId = '';
  List<Company> _companies = [];

  @override
  void initState() {
    super.initState();
    _loadCompanies();
  }

  Future<void> _loadCompanies() async {
    List<Company> companies = await _companyService.getAllCompanies();
    setState(() {
      _companies = companies;
    });
  }

  void _signUp() async {
    final email = _emailController.text;
    final password = _passwordController.text;
    final name = _nameController.text;
    final whatsapp = _whatsappController.text;
    final description = _descriptionController.text;
    final profileImage = _profileImageController.text;

    if (_selectedCompanyId.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please select a company')),
      );
      return;
    }

    bool success = await _authService.signUp(email, password);
    if (success) {
      User newUser = User(
        id: _authService.getCurrentUser()!.uid,
        name: name,
        email: email,
        role: 'CEO',
        companyId: _selectedCompanyId,
        whatsapp: whatsapp,
        description: description,
        profileImage: profileImage,
      );
      await _userService.addUser(newUser);
      // Navigate to CEO Dashboard
      Navigator.pushReplacementNamed(context, '/ceo_dashboard');
    } else {
      // Show error message
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Sign up failed')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF2F0E8),
      appBar: AppBar(
        title: Text('Sign Up', style: GoogleFonts.rubik()),
        backgroundColor: Color(0xFFD97757),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              _buildTextField(_emailController, 'Email'),
              _buildTextField(_passwordController, 'Password', obscureText: true),
              _buildTextField(_nameController, 'Name'),
              _buildTextField(_whatsappController, 'WhatsApp'),
              _buildTextField(_descriptionController, 'Description'),
              _buildTextField(_profileImageController, 'Profile Image URL'),
              _buildDropdown(),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _signUp,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFFD97757),
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 16),
                  textStyle: GoogleFonts.rubik(fontSize: 18),
                ),
                child: Text('Sign Up', style: TextStyle(color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String labelText, {bool obscureText = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextField(
        controller: controller,
        obscureText: obscureText,
        style: GoogleFonts.rubik(),
        decoration: InputDecoration(
          labelText: labelText,
          labelStyle: GoogleFonts.rubik(),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
      ),
    );
  }

  Widget _buildDropdown() {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: DropdownButtonFormField<String>(
        value: _selectedCompanyId.isNotEmpty ? _selectedCompanyId : null,
        hint: Text('Select Company', style: GoogleFonts.rubik()),
        decoration: InputDecoration(
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
          filled: true,
          fillColor: Colors.white,
        ),
        items: _companies.map((Company company) {
          return DropdownMenuItem<String>(
            value: company.id,
            child: Text(company.name, style: GoogleFonts.rubik()),
          );
        }).toList(),
        onChanged: (String? newValue) {
          setState(() {
            _selectedCompanyId = newValue!;
          });
        },
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\auth_service.dart
import 'package:firebase_auth/firebase_auth.dart';

class AuthService {
  final FirebaseAuth _auth = FirebaseAuth.instance;

  // Login with email and password
  Future<bool> login(String email, String password) async {
    try {
      UserCredential userCredential = await _auth.signInWithEmailAndPassword(email: email, password: password);
      return userCredential.user != null;
    } catch (e) {
      print(e.toString());
      return false;
    }
  }

  // Sign up with email and password
  Future<bool> signUp(String email, String password) async {
    try {
      UserCredential userCredential = await _auth.createUserWithEmailAndPassword(email: email, password: password);
      return userCredential.user != null;
    } catch (e) {
      print(e.toString());
      return false;
    }
  }

  // Logout
  Future<void> logout() async {
    await _auth.signOut();
  }

  // Get current user
  User? getCurrentUser() {
    return _auth.currentUser;
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\company_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:business_management_app/models/company.dart';

class CompanyService {
  final CollectionReference _companyCollection = FirebaseFirestore.instance.collection('companies');

  Future<Company> getCompanyById(String companyId) async {
    DocumentSnapshot doc = await _companyCollection.doc(companyId).get();
    return Company.fromMap(doc.data() as Map<String, dynamic>);
  }

  Future<List<Company>> getAllCompanies() async {
    QuerySnapshot querySnapshot = await _companyCollection.get();
    return querySnapshot.docs.map((doc) => Company.fromMap(doc.data() as Map<String, dynamic>)).toList();
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\project_service.dart
// project_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:business_management_app/models/project.dart';

class ProjectService {
  final CollectionReference _projectCollection = FirebaseFirestore.instance.collection('projects');

  Future<void> addProject(Project project) async {
    await _projectCollection.doc(project.id).set(project.toMap());
  }

  Future<Project> getProject(String id) async {
    DocumentSnapshot doc = await _projectCollection.doc(id).get();
    return Project.fromMap(doc.data() as Map<String, dynamic>);
  }

  Future<void> updateProject(Project project) async {
    await _projectCollection.doc(project.id).update(project.toMap());
  }

  Future<void> deleteProject(String id) async {
    await _projectCollection.doc(id).delete();
  }

  Future<List<Project>> getLatestProjects() async {
    QuerySnapshot querySnapshot = await _projectCollection
        .orderBy('end', descending: true)
        .limit(10)
        .get(); // Fetch the latest 10 projects based on end date
    return querySnapshot.docs
        .map((doc) => Project.fromMap(doc.data() as Map<String, dynamic>))
        .toList();
  }

  Future<List<Project>> getProjectsForCompany(String companyId) async {
    QuerySnapshot querySnapshot = await _projectCollection
        .where('companyId', isEqualTo: companyId)
        .get();
    return querySnapshot.docs
        .map((doc) => Project.fromMap(doc.data() as Map<String, dynamic>))
        .toList();
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\services\user_service.dart
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart' as FirebaseAuthUser;
import 'package:business_management_app/models/user.dart';

class UserService {
  final FirebaseAuthUser.FirebaseAuth _auth = FirebaseAuthUser.FirebaseAuth.instance;
  final CollectionReference _userCollection = FirebaseFirestore.instance.collection('users');

  Future<User> getCurrentUser() async {
    final firebaseUser = _auth.currentUser!;
    final userData = await _userCollection.doc(firebaseUser.uid).get();
    return User.fromMap(userData.data() as Map<String, dynamic>);
  }

  Future<void> addUser(User user) async {
    await _userCollection.doc(user.id).set(user.toMap());
  }

  Future<User> getUser(String userId) async {
    final userData = await _userCollection.doc(userId).get();
    return User.fromMap(userData.data() as Map<String, dynamic>);
  }

  Future<void> updateUser(User user) async {
    await _userCollection.doc(user.id).update(user.toMap());
  }

  Future<List<User>> getAllCEOs() async {
    QuerySnapshot querySnapshot = await _userCollection.where('role', isEqualTo: 'CEO').get();
    return querySnapshot.docs
        .map((doc) => User.fromMap(doc.data() as Map<String, dynamic>))
        .toList();
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\utils\constants.dart


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\utils\theme.dart
import 'package:flutter/material.dart';

ThemeData appTheme() {
  return ThemeData(
    primarySwatch: Colors.blue,
    visualDensity: VisualDensity.adaptivePlatformDensity,
    textTheme: const TextTheme(
      headline1: TextStyle(fontSize: 32.0, fontWeight: FontWeight.bold, color: Colors.black),
      headline6: TextStyle(fontSize: 24.0, fontWeight: FontWeight.bold, color: Colors.black),
      bodyText1: TextStyle(fontSize: 16.0, color: Colors.black),
      bodyText2: TextStyle(fontSize: 14.0, color: Colors.black54),
    ),
    buttonTheme: const ButtonThemeData(
      buttonColor: Colors.blue,
      textTheme: ButtonTextTheme.primary,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.all(Radius.circular(8.0)),
      ),
    ),
    appBarTheme: const AppBarTheme(
      color: Colors.blue,
      titleTextStyle: TextStyle(
        fontSize: 20.0,
        fontWeight: FontWeight.bold,
        color: Colors.white,
      ),
      toolbarTextStyle: TextStyle(
        fontSize: 20.0,
        fontWeight: FontWeight.bold,
        color: Colors.white,
      ),
    ),
  );
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\ceo_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/user.dart';

class CEOCard extends StatelessWidget {
  final User user;

  CEOCard({required this.user});

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        CircleAvatar(
          backgroundImage: NetworkImage(user.profileImage ?? 'https://via.placeholder.com/150'),
          radius: 40,
        ),
        SizedBox(height: 8),
        Container(
          width: 80, // Set a fixed width for the text
          child: Text(
            user.name,
            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            textAlign: TextAlign.center,
            overflow: TextOverflow.ellipsis,
            maxLines: 1, // Limit to 1 line with ellipsis if the text is too long
          ),
        ),
      ],
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\company_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/company.dart';

class CompanyCard extends StatelessWidget {
  final Company company;
  CompanyCard({required this.company});

  @override
  Widget build(BuildContext context) {
    return Card(
      color: Colors.white, // Set the background color to white
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(16.0),
        // Remove the side parameter to remove the grey border
      ),
      elevation: 4.0,
      child: Container(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(
                  company.name,
                  style: TextStyle(
                    fontSize: 18.0,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                CircleAvatar(
                  radius: 12.0,
                  backgroundColor: _getStatusColor(company.statusColor),
                ),
              ],
            ),
            SizedBox(height: 8.0),
            Text(
              'Employees: ${company.employeeCount}',
              style: TextStyle(fontSize: 16.0),
            ),
          ],
        ),
      ),
    );
  }

  Color _getStatusColor(String statusColor) {
    switch (statusColor) {
      case 'red':
        return Colors.red;
      case 'yellow':
        return Colors.yellow;
      case 'green':
        return Colors.green;
      default:
        return Colors.grey;
    }
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\latest_project_card.dart
// latest_project_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';

class LatestProjectCard extends StatelessWidget {
  final Project project;

  LatestProjectCard({required this.project});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: EdgeInsets.all(8.0),
      color: Colors.white,
      elevation: 0,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.only(
          topLeft: Radius.circular(16.0),
          topRight: Radius.circular(16.0),
          bottomLeft: Radius.circular(16.0),
          bottomRight: Radius.circular(16.0),
        ),
        side: BorderSide(
          color: Colors.grey,
          width: 1,
          strokeAlign: BorderSide.strokeAlignCenter, // Center the border
        ),
      ),
      child: Padding(
        padding: const EdgeInsets.only(bottom: 2.0), // Add padding at the bottom
        child: ListTile(
          title: Text(project.name, style: Theme.of(context).textTheme.headline6),
          subtitle: Text('Status: ${project.status}\nBudget: \$${project.budget}'),
          onTap: () {
            // Handle card tap
          },
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\project_card.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/project.dart';
import 'package:business_management_app/screens/project_details_screen.dart';
import 'package:business_management_app/screens/edit_project_screen.dart';

class ProjectCard extends StatelessWidget {
  final Project project;
  final VoidCallback onView;
  final VoidCallback onUpdate;

  ProjectCard({
    required this.project,
    required this.onView,
    required this.onUpdate,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(16.0),
      ),
      elevation: 4.0,
      child: Container(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              project.name,
              style: TextStyle(
                fontSize: 18.0,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 8.0),
            Row(
              children: [
                Expanded(
                  child: ElevatedButton(
                    onPressed: onView,
                    style: ElevatedButton.styleFrom(
                      foregroundColor: Colors.white,
                      backgroundColor: Colors.blueAccent,
                      padding: EdgeInsets.symmetric(vertical: 12.0),
                    ),
                    child: Text('View'),
                  ),
                ),
                SizedBox(width: 16.0),
                Expanded(
                  child: ElevatedButton(
                    onPressed: onUpdate,
                    style: ElevatedButton.styleFrom(
                      foregroundColor: Colors.white,
                      backgroundColor: Colors.green,
                      padding: EdgeInsets.symmetric(vertical: 12.0),
                    ),
                    child: Text('Update'),
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}


    File: C:\Users\LENOVO\Desktop\business_management_app\lib\widgets\user_profile.dart
import 'package:flutter/material.dart';
import 'package:business_management_app/models/user.dart';

class UserProfile extends StatelessWidget {
  final User user;

  UserProfile({required this.user});

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: EdgeInsets.all(8.0),
      child: ListTile(
        title: Text(user.name, style: Theme.of(context).textTheme.headline6),
        subtitle: Text('Email: ${user.email}'),
        trailing: Text(user.role),
        onTap: () {
          // Handle card tap
        },
      ),
    );
  }
}

